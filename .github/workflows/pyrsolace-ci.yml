# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: pyrsolace-ci

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "10.0"
      - name: Install maturin
        run: |
          pip install maturin[zig]
      - name: Build wheels
        run: |
          ldd --version
          cd pyrsolace
          maturin build --release --out dist --find-interpreter --compatibility manylinux2014 --zig
        # uses: PyO3/maturin-action@v1
        # with:
        #   working-directory: pyrsolace
        #   target: ${{ matrix.target }}
        #   args: --release --out dist --find-interpreter
        #   sccache: "true"
        #   manylinux: auto
        #   docker-options: -e LIBCLANG_PATH=/opt/rh/llvm-toolset-7/root/usr/lib64/ -e LIBCLANG_STATIC_PATH=/opt/rh/llvm-toolset-7/root/usr/lib64/ -e CLANG_PATH=/opt/rh/llvm-toolset-7/root/usr/bin/clang
        #   before-script-linux: |
        #     # If we're running on rhel centos, install needed packages.
        #     if command -v yum &> /dev/null; then
        #         yum update -y && yum install -y perl-core perl-IPC-Cmd openssl openssl-devel pkgconfig libatomic centos-release-scl llvm-toolset-7 && echo 'source scl_source enable llvm-toolset-7' >> ~/.bashrc
        #         # If we're running on i686 we need to symlink libatomic
        #         # in order to build openssl with -latomic flag.
        #         if [[ ! -d "/usr/lib64" ]]; then
        #             ln -s /usr/lib/libatomic.so.1 /usr/lib/libatomic.so
        #         fi
        #     else
        #         # If we're running on debian-based system.
        #         apt update -y && apt-get install -y perl libssl-dev openssl pkg-config libclang-dev gcc-multilib
        #     fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: pyrsolace/dist

  linux-arm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: uraimo/run-on-arch-action@v3
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt update
            apt install -y libclang-dev build-essential curl
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
            echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $HOME/.bashrc
            export PATH="$HOME/.local/bin:$PATH"
            uv python install 3.10
            uv tool install maturin
          run: |
            source $HOME/.cargo/env
            export PATH="$HOME/.local/bin:$PATH"
            cd pyrsolace
            uv run maturin build --release --out dist --find-interpreter --compatibility manylinux2014 --zig
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-arm-${{ matrix.target }}
          path: pyrsolace/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: "latest"
          platform: ${{ matrix.target }}
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: pyrsolace
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: pyrsolace/dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: pyrsolace
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: pyrsolace/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [linux, windows, macos, linux-arm]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
