from typing import Callable, Optional
from enum import Enum

class ReturnCode(Enum):
    Ok = 0
    WouldBlock = 1
    InProgress = 2
    NotReady = 3
    Eos = 4
    NotFound = 5
    NoEvent = 6
    InComplete = 7
    Rollback = 8
    Fail = 9

class Msg:
    topic: Optional[str]
    data: bytes
    reply_to: Optional[str]
    corr_id: Optional[str]
    def __init__(self) -> Msg: ...
    def set_user_prop(self, key: str, value: str, map_size: int) -> None: ...
    def get_user_prop(self, key: str) -> str: ...

class Client:
    def __init__(self) -> Client: ...
    def set_msg_callback(self, callback: Callable[[Msg], None]) -> None: ...
    def connect(
        self, host: str, vpn: str, username: str, password: str, client_name: str
    ) -> bool: ...
    def disconnect(self) -> None: ...
    def publish(self, topic: str, payload: bytes) -> None: ...
    def subscribe(self, topic: str) -> ReturnCode: ...
    def unsubscribe(self, topic: str) -> ReturnCode: ...
    def send_msg(self, msg: Msg) -> ReturnCode: ...
